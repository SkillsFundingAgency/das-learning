openapi: 3.0.0
info:
  version: '1.0'
  title: Learning inner API service.
  description: 'This service will provide searching facilities to outer APIs for filtering approved apprenticeships'
paths:
  /info:
    get:
      description: information regarding this API. The version will be returned
      responses:
        '200':
          $ref: '#/components/responses/infoResponse'  
  /health:
    get:
      description: The system is fully ready to accept requests and all the dependencies are healthy
      responses:
        '200':
          $ref: '#/components/responses/healthCheckResponse'
        '503':
          $ref: '#/components/responses/healthCheckResponse'
          
  /providers/{ukprn}/academicyears/{academicyear}/learning:
    get:
      summary: Returns a paged list of apprenticeships for this provider
      parameters:
        - name: ukprn
          in: path
          required: true
          description: The UK Provider Reference Number for the provider entering this learner
          schema:
            type: string
        - name: academicyear
          in: path
          required: true
          example: 2425
          schema:
            type: integer
        - name: page
          in: query
          required: false
          description: Default is 1
          schema:
            type: integer
        - name: pagesize
          in: query
          required: false
          example: 20
          description: Default is 20, can be between 10 and 100
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/pagedApprenticeshipsResponse'  
    
  /providers/{ukprn}/learning:
    get:
      summary: Returns a paged list of learning. The state is a required query parameter so only one state of a particular record will be return per call. This call is independant of laerningType and should return multiple learnings of every type
      parameters:
        - name: ukprn
          in: path
          required: true
          description: The UK Provider Reference Number for the provider entering this learner
          schema:
            type: string
        - name: state
          in: query
          required: true
          schema:
            type: string
            enum:
            - new
            - approved
            - hasPendingChanges
        - name: startMonth
          in: query
          required: false
          schema:
            type: integer
        - name: startYear
          in: query
          required: false
          schema:
            type: integer
        - name: page
          in: query
          required: false
          description: Default is 1
          schema:
            type: integer
        - name: pagesize
          in: query
          required: false
          example: 20
          description: Default is 20, can be between 10 and 100
          schema:
            type: integer
        - name: sortColumn
          in: query
          required: false
          description: The column to sort on, default is surname
          schema:
            type: string
        - name: sortDescending
          in: query
          required: false
          description: Default is ascending
          schema:
            type: string
        - name: filter
          in: query
          required: false
          description: a filter to be used against the ULN or surname
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/pagedLearningResponse' 
  
  /providers/{ukprn}/learning/{learningKey}/status/new:
    get:
      summary: Returns the new learning record that has not been through the approval process
      parameters:
        - name: learningKey
          in: path
          required: true
          description: The id of the record in learning
          schema:
            type: string
        - name: ukprn
          in: path
          required: true
          description: The ukprn to filter down by provider
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/learningResponse'  
        '400':
          $ref: '#/components/responses/badRequest'  
        '404':
          description: The resource was not found 
        
  /providers/{ukprn}/learning/{learningKey}/status/approved:
    get:
      summary: Returns the approved record of learning
      parameters:
        - name: learningKey
          in: path
          required: true
          description: The id of the record in learning
          schema:
            type: string
        - name: ukprn
          in: path
          required: true
          description: The ukprn to filter down by provider
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/learningResponse'  
        '400':
          $ref: '#/components/responses/badRequest'  
        '404':
          description: The resource was not found 
      
  /providers/{ukprn}/learning/{learningKey}/status/unapproved:
    get:
      summary: Returns the unapproved record of learning
      parameters:
        - name: learningKey
          in: path
          required: true
          description: The id of the record in learning
          schema:
            type: string
        - name: ukprn
          in: path
          required: true
          description: The ukprn to filter down by provider
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/learningResponse'  
        '400':
          $ref: '#/components/responses/badRequest'  
        '404':
          description: The resource was not found 
          
components:  
  headers:
    location:
      schema:
        type: string
        format: url
        example: /learners/guid
  
  responses:
    pagedLearningResponse:
      description: A paged learning response, containing learners from ILR and the 
      headers:
        Link:
          description: Pagination links (next, prev)
          schema:
            type: string
            format: url
          example: '<https://api.example.com/items?page=2>; rel="prev", <https://api.example.com/items?page=5>; rel="next"'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/pagedLearning'

    learningResponse:
      description: A single record of learning
      headers:
        Location:
          description: Location of the resource
          schema:
            type: string
            format: url
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/learningRecord'

    changeResponse:
      description: A list of changes applied from the ILR to a learning record
      headers:
        Location:
          description: Location of the resource
          schema:
            type: string
            format: url
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/changesRecord'

    pagedApprenticeshipsResponse:
      description: A paged apprenticeship response
      headers:
        Link:
          description: Pagination links (next, prev)
          schema:
            type: string
            format: url
          example: '<https://api.example.com/items?page=2>; rel="prev", <https://api.example.com/items?page=5>; rel="next"'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/pagedApprenticeships'

    okResponse:
      description: OK
      content:
        text/plain:
          schema:
            type: string
            example: OK

    badRequest:
      description: A bad request was detected
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    
    healthCheckResponse:
      description: Results of a health check
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/healthcheckResults'

    infoResponse:
      description: Information response
      content:
        text/plain:
          schema:
            type: string
            example: Leaner data APIM for the apprenticeship service - Version 3.0.2

    createUpdateResponse:
      description: The update
      headers:
        Location:
          $ref: '#/components/headers/location'
  
  schemas:
    error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    
    changesRecord:
      type: object
      properties:
        changes:
          type: array
          items:
            $ref: "#/components/schemas/change"
    
    change:
      type: object
      properties:
        name:
          type: string
          enum: 
          - PriceChangeIncrease
          - PriceChangeDecrease
          - StartDateChange
        value:
          type: string
          
    learningRecord:
      oneOf:
      - $ref: '#/components/schemas/apprenticeshipLearning'
      - $ref: '#/components/schemas/foundationApprenticeshipLearning'
      - $ref: '#/components/schemas/shortApprenticeshipLearning'
      
    pagedLearning:
      oneOf:
        - $ref: '#/components/schemas/apprenticeshipLearning'
        - $ref: '#/components/schemas/foundationApprenticeshipLearning'
        - $ref: '#/components/schemas/shortApprenticeshipLearning'
      type: object
      properties:
        total:
          type: integer
          minimum: 0
        page: 
          type: integer
          minimum: 1
        pageSize: 
          type: integer
          minimum: 1
          maximum: 20
        totalPages: 
          type: integer
          minimum: 1
      required:
        - page
        - total
        - pageSize  
        - totalPages  
    
    pagedApprenticeships:
      type: object
      properties:
        learners:
          type: array
          items:
              $ref: '#/components/schemas/apprenticeship'
        total:
          type: integer
          minimum: 0
        page: 
          type: integer
          minimum: 1
        pageSize: 
          type: integer
          minimum: 1
          maximum: 20
        totalPages: 
          type: integer
          minimum: 1
      required:
        - page
        - total
        - pageSize  
        - totalPages  
    
    healthcheckResults:
      type: array
      items:
        $ref: '#/components/schemas/healthcheck' 
  
    healthcheck:
      type: object
      properties:
        description: 
          type: string
        result: 
          type: string    
    
    apprenticeship:
      type: object
      properties:
        uln:
          type: string
        learningKey:
          type: string
          format: uuid

    learning:
      type: object
      properties:
        uri:
          type: string
          format: uri 
          example: /providers/{ukprn}/learning/{guid}/status/new
        trainingType:
          type: string
        uln:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
          format: date
        learnerEmail:
          type: string
        priorLearningPercent:
          description: This is the percentage of learning already complete before this course starts
          type: integer
          example: 10
        ukprn:
          type: integer
        agreementId:
          type: string
        trainingPrice:
          type: integer
          description: This is the earliest price
        epaoPrice:
          type: integer
          description: This is the earliest price
        standardCode:
          type: integer
        startDate:
          type: string
          format: date
        academicYear:
          type: integer
        plannedEndDate:
          type: string
          format: date
        isFlexiJob: 
          type: boolean
        plannedOTJTrainingHours:
          type: integer
        receivedDate:
          type: string
          format: date
          description: The date when the event was raised on the system (effectively the POST date from DC)
      required:
        - uln
        - firstName
        - lastName
        - dateOfBirth
        - learnerEmail
        - priorLearningPercent
        - ukprn
        - agreementId
        - trainingPrice
        - epaoPrice
        - standardCode
        - startDate
        - academicYear
        - plannedEndDate
        - receivedDate
        - plannedOTJTrainingHours
        - isFlexiJob


    apprenticeshipLearning:
      description: This is the exact copy of a normal apprenticeship
      allOf:
      - $ref: "#/components/schemas/learning"
      - type: object
        properties:
          trainingType:
            type: string
            enum:
            - apprenticeship
      
    foundationApprenticeshipLearning:
      description: This is the exact copy of a normal apprenticeship
      allOf:
      - $ref: "#/components/schemas/learning"
      - type: object
        properties:
          trainingType:
            type: string
            enum:
            - foundationApprenticeship

    shortApprenticeshipLearning:
      description: This is the exact copy of a normal apprenticeship
      allOf:
      - $ref: "#/components/schemas/learning"
      - type: object
        properties:
          trainingType:
            type: string
            enum:
            - shortApprenticeship